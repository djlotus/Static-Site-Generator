/*! 
* 
* Columns
* 
*/

$column: "columns" !default;
$column-count: 12 !default;

// Generate column widths per screen size
// - - - - - - - - - - - - - - - - - - - -
@each $bp in $breakpoints {
   @include breakpoint($bp) {
      @for $i from 1 through $column-count {
         // Standard columns
         .#{$bp}-#{$i} {
            width: percentage(calc($i / $column-count));
         }
         // Pushed columns
         .#{$bp}-push-#{$i} {
            position: relative;
            right: auto;
            left: percentage(calc($i / $column-count));
         }
         // Pulled columns
         .#{$bp}-pull-#{$i} {
            position: relative;
            left: auto;
            right: percentage(calc($i / $column-count));
         }
      }

      .#{$bp}-text-center {
         text-align: center;
      }

      .#{$bp}-text-right {
         text-align: right;
      }
   }
}

// Columns
// - - - - - - - - - - - - - - - - - - - -
.#{columns} {
   @include padding-left(0);
   @include padding-right(0);
   float: left;
   @include breakpoint(medium) {
      padding: {
         left: $global-padding + em;
         right: $global-padding + em;
      }
      box-sizing: border-box;
      &:first-of-type {
         @include padding-left(0);
      }
      &:last-of-type {
         @include padding-right(0);
      }
   }
}

// Prevent misspelling from breaking grid
.column {
   @extend .#{columns};
}

// Handle last column
[class*="column"] + [class*="column"] {
   &:last-child {
      float: right;
   }
   &.end {
      float: left;
   }
}

// Handle centered columns
[class*="-centered"] {
   float: none !important;
   margin: 0 auto;
   display: initial;
}
